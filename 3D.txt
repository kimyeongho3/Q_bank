1장 연습문제

04 운영체제의 구성 요소가 아닌 것은? 1
① 유틸리티				② GUI
③ 드라이버	 			④ 커널

05 나머지 셋과 종류가 다른 것은? 1
① 드라이버				② GUI 
③ 셸	 			④ 명령 프롬프트

06 운영체제의 핵심 기능을 모아 놓은 것은? 4
① 유틸리티				② 사용자 인터페이스
③ 디바이스 드라이버			④ 커널

09 키보드와 모니터가 발명되면서 실현 가능하게 된 시스템은? 1
① 대화형 시스템			② 일괄 작업 시스템
③ 시분할 시스템			④ 실시간 시스템

10 CPU 시간을 잘게 나누어 여러 프로그램이 동시에 실행되는 것처럼 보이는 시스템은? 3
① hard wiring system		② batch job system
③ time sharing system 		④ real-time system

12 언제 어디서나 컴퓨팅 파워나 소프트웨어에 접근할 수 있는 유연한 컴퓨터 환경을 위해 고안된 시스템은? 2
① real-time system			② cloud computing
③ P2P system 			④ Internet of Things

13 사용자가 커널에 진입할 수 있는 유일한 수단은? 1
① 시스템 호출			② 사용자 정의 함수
③ 디바이스 드라이버			④ 사용자 인터페이스

14 응용 프로그램이 자신과 연관된 프로그램을 만들 수 있도록 제공하는 인터페이스는? 2
① interface				② API
③ shell				④ kernel

15 프로그램 개발자를 위해 API, 코드 편집기, 에뮬레이터 같은 각종 개발용 응용 프로그램까지 하나로 묶어서 배포하는 개발 툴은? 1
① SDK				② 시스템 호출
③ 드라이버				④ 커널

16 커널과 하드웨어의 인터페이스를 가리키는 것은? 3
① SDK				② system call
③ driver				④ API

18 비슷한 기능을 가진 모듈을 묶어서 하나의 계층으로 만들고, 계층 간 통신을 통해 운영체제를 구현하는 방식의 커널은? 3
① micro architecture kernel		② wide architecture kernel
③ layered architecture kernel		④ monolithic architecture kernel

20 서로 다른 운영체제에서 동일한 작업 환경을 만들어 주는 것은? 3
① 객체지향				② 컴파일러
③ 가상머신		 		④ 인터프리터

21 (   운영체제     )는 컴퓨터 전체를 관리하고 운영하는 소프트웨어다.

23 (    임베디드 컴퓨터       )은 CPU 성능이 낮고 메모리 크기가 작은 기계에 탑재된 컴퓨터다.

26 (    커널      )은 운영체제의 핵심 기능을 모아 놓은 것이다.

29 (   대화형 시스템     )은 키보드와 모니터가 발명되면서 실현 가능하게 된 시스템이다.

30 (  시분할 시스템    )은 CPU 시간을 잘게 나누어 여러 프로그램이 동시에 실행되는 것처럼 보이는 시스템이다.

33 사용자가 자발적으로 커널에 진입할 수 있는 유일한 방법은 (   시스템 호출    )뿐이다.

34 (    API    )는 응용 프로그램이 자신과 연관된 프로그램을 만들 수 있도록 제공하는 인터페이스다. 

37 (     단일형 구조 커널     )은 핵심 기능을 구현하는 모듈이 구분 없이 하나로 구성된 커널이다.

38 (   계층형 구조 커널    )은 비슷한 기능을 가진 모듈을 묶어서 하나의 계층으로 만들고, 계층 간의 통신을 통해 운영체제를 구현하는 방식의 커널이다.

39 (    마이크로 구조 커널     )은 프로세스 관리, 메모리 관리, 프로세스 간 통신 관리 등 가장 기본 기능만 제공하는 커널이다.

42 시분할 시스템에 대하여 설명하시오.
CPU로 여러 작업을 동시에 실행하는 기술인 멀티프로그래밍 기술을 통해 CPU 사용 시간을 잘게 쪼개어 여러 작업에 나누어 줌으로써 모든 작업을 동시에 처리하는 것처럼 보이게 하는 것.

3장 연습문제

01 실행을 위해 메모리에 올라온 동적인 상태를 가리키는 것은? 2
    ① 소스코드				② 프로세스
③ 프로그램		 		④ PCB

02 프로세스를 실행하는 데 필요한 정보를 보관하는 자료구조는? 4
    ① stack 				② PC
③ queue		 		④ PCB

03 프로세스가 CPU를 할당받기 전에 기다리는 상태는? 2
    ① 실행 상태			        ② 준비 상태
③ 대기 상태		 		④ 생성 상태

04 실행 상태의 프로세스가 입출력을 요구하면 이동하는 상태는? 3
    ① 완료 상태			        ② 준비 상태
③ 대기 상태		 		④ 생성 상태

05 대기 상태의 프로세스가 입출력이 완료되면 이동하는 상태는? 2
    ① 실행 상태			        ② 준비 상태
③ 완료 상태		 		④ 생성 상태

06 실행 상태의 프로세스가 작업이 안 끝났음에도 타임 슬라이스 아웃이 걸려 이동하게 되는 상태는? 2
    ① 완료 상태			        ② 준비 상태
③ 대기 상태		 		④ 생성 상태

09 두 프로세스의 PCB를 교환하고 작업 환경을 바꾸는 작업은? 4
    ① 활성 상태			        ② 다단계 큐
③ 다중 인스턴스			④ 문맥 교환

10 타임 슬라이스의 크기를 정할 때 기준이 되는 것은? 1
    ① 문맥 교환			        ② 다단계 큐
③ 다중 인스턴스			④ 활성 상태

11 유닉스에서 프로세스 번호 1번이면서 모든 프로세스의 최고 조상에 해당하는 프로세스의 이름은? 1
    ① init				② login
③ shell				④ swapper

12 새로운 프로세스를 생성하는 함수는? 2
    ① wait()				② fork()
③ exit()				④ exec()

13 프로세스는 그대로 놔둔 채 코드를 바꾸는 함수는? 4
    ① wait()				② fork()
③ exit()				④ exec()

14 프로세스의 재사용과 가장 연관이 깊은 함수는? 4
    ① wait()				② fork()
③ exit()				④ exec()

15 자식 프로세스가 종료되기 전에 부모 프로세스가 먼저 종료되면 자식 프로세스는 어떤 프로세스가 되는가? 3
    ① init 프로세스			② zombi 프로세스
③ orphan 프로세스			④ swapper 프로세스

16 자식 프로세스가 종료되었는데도 부모가 뒤처리를 하지 않으면 자식 프로세스는 어떤 프로세스가 되는가? 2
    ① init 프로세스			② 좀비 프로세스
③ 고아 프로세스			④ swapper 프로세스

18 코드에 정의된 절차에 따라 CPU에 작업을 요청하는 실행 단위는? 4
    ① 태스크				② 작업
③ 프로세스		 		④ 스레드

19 멀티스레드의 장점이 아닌 것은? 1
    ① 스레드끼리 독립적이라 영향을 받지 않는다.
    ② 응답 속도가 빨라진다.
    ③ 프로세스에 비하여 통신 오버헤드가 적다.
    ④ 시스템 자원을 공유한다.

21 프로세스 제어 블록(PCB)은 (      운영체제         ) 영역에 만들어진다.

22 메모리에 있는 프로세스는 코드, 데이터, (       스택        ) 영역으로 나뉜다.

23 프로세스 상태 중 (      준비         ) 상태는 프로세스가 CPU를 할당받기 전에 기다리는 상태다.

24 프로세스 상태 중 (        대기       ) 상태는 컴퓨터의 효율성을 높이기 위하여 만들어진 상태다.

25 프로세스 상태 중 (     대기          ) 상태는 실행 상태의 프로세스가 입출력을 요구하면 이동하는 상태다.

26 프로세스 상태 중 (       준비        ) 상태는 대기 상태의 프로세스가 입출력이 완료되면 이동하는 상태다.

27 프로세스 상태 중 (       준비        ) 상태는 실행 상태의 프로세스가 작업이 안 끝났음에도 타임 슬라이스 아웃이 걸려 이동하게 되는 상태다.
   
30 (       문맥 교환      )은 두 프로세스의 PCB를 교환하고 작업 환경을 바꾸는 작업이다.
    
33 유닉스에서 프로세스 번호 1번이면서 모든 프로세스의 최고 조상 프로세스에 해당하는 프로세스의 이름은 (    init 프로세스           )이다.
   
34 (      fork()         )는 새로운 프로세스를 생성하는 함수다.
   
35 (      exec()         )는 프로세스는 그대로 놔둔 채 코드를 바꾸는 함수다.
   
36 (        fork()       )는 다중 인스턴스를 만들 때 사용하는 함수다.
   
37 (      exec()         )는 프로세스의 재사용과 가장 연관이 깊은 함수다.

41 자식 프로세스가 종료되기 전에 부모 프로세스가 먼저 종료되면 자식 프로세스는 (    고아 프로세스           )가 된다.
   
42 자식 프로세스가 종료되었는데도 부모가 뒤처리를 하지 않으면 자식 프로세스는 (   좀비 프로세스            )가 된다.
   
43 fork() 이후에 부모 프로세스에 wait()가 없으면 (    고아 프로세스           ) 프로세스가 만들어진다.

46 (     프로세스          )는 프로그램이 실행을 위해 메모리에 올라온 동적 상태를 말한다.

47 (     프로세스 제어 블록(PCB, process control block)          )는 프로세스를 실행하는 데 필요한 정보를 보관하는 자료구조다.

50 (       스레드        )는 정의된 절차에 따라 CPU에 작업을 요청하는 실행 단위를 말한다.

51 (     멀티스레드          )는 프로세스에서 자원을 공유하고 실행 단위만 여러 개 만드는 것을 말한다.

54 PCB에 대하여 설명하시오.
프로세스 제어 블록(PCB, Process Control Block)은 프로세스를 실행하기 위한 프로세스 구분자, 메모리 관련 정보, 프로그램 카운터와 각종 레지스터 같은 중간값을 관리하고 보관하는 데이터 구조이다.
프로그램이 프로세스가 되려면 메모리에 올라오는 것과 동시에 프로세스 제어 블록이 생성되어야 한다.

55 프로세스의 다섯 가지 상태에 대하여 설명하시오.
프로세스의 다섯 가지 상태로는 생성, 준비, 실행, 대기, 완료가 있다.
프로그램이 프로세스가 되며 PCB가 생성되는 생성 상태, 생성된 프로세스가 CPU 자원을 받기 위해 기다리는 준비 상태, 프로세스가 CPU 자원을 할당받아 작업을 수행하는 실행 상태, 입출력 등의 이유로 잠시 기다리는 대기 상태, 작업이 완료되어 PCB가 폐기되는 완료 상태가 있다.





4장 연습문제

04 비선점형 스케줄링과 비교한 선점형 스케줄링에 대한 설명으로 옳지 않은 것은? 1
    ① 비선점형에 비하여 우선순위가 낮다		
    ② 실행 상태에 있는 작업을 중단시키고 새로운 작업을 실행할 수 있다.
③ 문맥 교환의 오버헤드가 많다.	 	
④ 시분할 방식 스케줄러에 사용된다.

05 나머지 3개와 비교하여 우선순위가 높은 프로세스는? 3
    ① 일괄 처리 프로세스		② 사용자 프로세스
③ 커널 프로세스		 	④ CPU 집중 프로세스

06 준비 큐에 도착한 순서대로 CPU를 할당하는 비선점형 방식의 스케줄링 알고리즘은? 4
    ① 최고 응답률 우선(HRN)		② 최단 작업 우선(SJF)
③ 최소 잔류 시간 우선(SRT)	 	④ 선입선출(FCFS)

07 준비 큐에 있는 프로세스 중에서 실행 시간이 가장 짧은 작업부터 CPU를 할당하는 비선점형 방식의 스케줄링 알고리즘은? 2
    ① 최고 응답률 우선(HRN)		② 최단 작업 우선(SJF)
③ 최소 잔류 시간 우선(SRT)	 	④ 선입선출(FCFS)

08 아사 현상이 발생할 수 있는 비선점형 방식의 스케줄링 알고리즘은? 2
    ① 최고 응답률 우선(HRN)		② 최단 작업 우선(SJF)
③ 최소 잔류 시간 우선(SRT)	 	④ 선입선출(FCFS)

09 서비스를 받기 위해 기다린 시간과 CPU 사용 시간을 고려하여 스케줄링하는 비선점형 알고리즘은? 1
    ① 최고 응답률 우선(HRN)		② 다단계 피드백 큐(MLFQ)	
③ 최소 잔류 시간 우선(SRT)	 	④ 선입선출(FCFS)

10 선점형 알고리즘이 아닌 것은? 4
    ① 다단계 큐(MLQ)			② 다단계 피드백 큐(MLFQ)
③ 라운드 로빈(RR)	 		④ 최단 작업 우선(SJF)

11 아사 현상을 완화하는 방법은? 2
    ① 사이클 훔치기			② 에이징
③ 작업 훔치기		 	④ 우선순위

12 선입선출(FCFS) 스케줄링과 유사하지만, 각 프로세스마다 CPU를 사용할 수 있는 타임 슬라이스가 있으며 우선순위가 없는 알고리즘은? 3
    ① 다단계 큐(MLQ)			② 다단계 피드백 큐(MLFQ)
③ 라운드 로빈(RR)	 		④ 최단 작업 우선(SJF)

13 문맥 교환 시간을 소비하는 알고리즘은? 3
    ① 최고 응답률 우선(HRN)		② 최단 작업 우선(SJF)
③ 다단계 큐(MLQ)			④ 선입선출(FCFS)

14 기본적으로 라운드 로빈 스케줄링을 사용하지만, CPU를 할당받을 프로세스를 선택할 때 남은 작업 시간이 가장 적은 프로세스를 선택하는 알고리즘은? 3
    ① 최고 응답률 우선(HRN)		② 다단계 피드백 큐(MLFQ)	
③ 최소 잔류 시간 우선(SRT)	 	④ 선입선출(FCFS)

16 우선순위에 따라 여러 개의 큐를 사용하는 알고리즘 중 고정 우선순위 방식은? 3
    ① 선입선출(FCFS)			② 다단계 피드백 큐(MLFQ)	
③ 다단계 큐(MLQ)			④ 최고 응답률 우선(HRN)

18 우선순위에 따라 여러 개의 큐를 사용하고 각 큐의 타임 슬라이스 크기가 다른 변동 우선순위 알고리즘은? 2
    ① 선입선출(FCFS)			② 다단계 피드백 큐(MLFQ)	
③ 다단계 큐(MLQ)			④ 최고 응답률 우선(HRN)

24 비선점형과 선점형 스케줄링 중 실행 상태에 있는 작업을 중단시키고 새로운 작업을 실행할 수 있는 것은 (  선점형 스케줄링             )이다.

25 비선점형과 선점형 스케줄링 중 실행 상태에 있는 작업이 완료될 때까지 다른 작업이 불가능한 것은 (      비선점형 스케줄링         )이다.

26 입출력 집중 프로세스보다 CPU 집중 프로세스의 우선순위가 (       낮다        ).

27 커널 프로세스의 우선순위가 사용자 프로세스보다 (       높다        ).

28 후면 프로세스보다 전면 프로세스의 우선순위가 (         높다      ).

29 일괄 처리 프로세스보다 대화형 프로세스의 우선순위가 (     높다          ).

32 (       선입선출(FCFS)        ) 스케줄링은 콘보이 효과가 발생하는 스케줄링 알고리즘이다.

33 (      최단 작업 우선(SJF)         ) 스케줄링은 준비 큐에 있는 프로세스 중에서 실행 시간이 가장 짧은 작업부터 CPU를 할당하는 비선점형 방식의 스케줄링 알고리즘이다.
   
34 (      아사(starvation) 현상 or 무한 봉쇄(infinite blocking) 현상         )은 최단 작업 우선(SJF)과 같은 알고리즘에서 긴 작업이 계속 뒤로 밀리는 것을 말한다.

35 (     최고 응답률 우선(HRN)          ) 스케줄링은 서비스를 받기 위해 기다린 시간과 CPU 사용 시간을 고려하여 스케줄링하는 비선점형 알고리즘이다.
    
36 (     라운드 로빈(RR)          ) 스케줄링은 선점형 알고리즘 중 우선순위가 적용되지 않는 가장 단순하고 대표적인 방식의 알고리즘이다.

37 (  에이징(나이 먹기, aging)             )은 아사 현상을 완화하는 방법이다.

38 (    라운드 로빈(RR)           ) 스케줄링은 선입선출(FCFS) 스케줄링과 유사하지만, 각 프로세스마다 CPU를 사용할 수 있는 타임 슬라이스가 있으며 우선순위가 없는 알고리즘이다.

39 (     최소 잔류 시간 우선(SRT)          ) 스케줄링은 최단 작업 우선(SJF)과 라운드 로빈(RR) 스케줄링을 혼합한 선점형 알고리즘이다.

40 (     다단계 큐(MLQ)          ) 스케줄링은 우선순위에 따라 여러 개의 큐를 사용하는 알고리즘 중 고정 우선순위 방식의 알고리즘이다.

41 (    최소 잔류 시간 우선(SRT)           ) 스케줄링은 기본적으로 라운드 로빈 스케줄링을 사용하지만, CPU를 할당받을 프로세스를 선택할 때 남은 작업 시간이 가장 적은 프로세스를 선택하는 알고리즘이다.

42 (     다단계 피드백 큐(MLFQ)          ) 스케줄링은 우선순위에 따라 여러 개의 큐를 사용하고 각 큐의 타임 슬라이스 크기가 다른 변동 우선순위 알고리즘이다.
   
48 최단 작업 우선(SJF) 스케줄링과 에이징에 대하여 설명하시오.
최단 작업 우선순위(SJF) 스케줄링은 작업 시간이 짧은 프로세스에 우선순위를 두어 콘보이 효과를 완화할 수 있는 스케줄링 방식이다.
SJF 스케줄링에서는 아사 현상이 발생할 수 있는데, 이를 해결하는 방법으로 에이징 방식을 사용한다. 에이징은 프로세스가 자신의 순서를 양보할 때마다 한 살식 먹으며, 프로세스가 양보할 수 있는 상한선에 도달했을 때 우선순위에 상관 없이 실행되는 것이다.

49 다단계 피드백 큐 스케줄링에 대하여 설명하시오.
다단계 피드백 큐는 우선순위가 낮은 프로세스가 불리한 다단계 큐의 단점을 보완한 스케줄링 방식으로, 프로세스가 실행될 때마다 우선순위가 한 단계씩 낮아진다.
우선순위가 무한대로 낮아져 최하단 우선순위 단계에 도달하면 선입선출(FCFS) 스케줄링 방식으로 동작하여 무조건 프로세스가 실행되도록 한다.